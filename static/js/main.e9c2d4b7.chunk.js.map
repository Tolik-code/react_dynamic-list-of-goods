{"version":3,"sources":["api/goods.js","Components/GoodList.jsx","App.js","index.js"],"names":["getAll","fetch","then","response","json","get5First","sort","prev","next","name","localeCompare","slice","getRed","filter","food","color","GoodList","state","list","prevProps","show","this","props","setState","goods","className","map","elem","key","id","React","Component","App","currentListGoods","recordListFromServer","promiseList","res","getFirstFiveGoods","getRedGoods","getAllGoods","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"+QAGO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,kBACvBL,IAASE,MAAK,SAAAC,GAAQ,OACpBA,EAASG,MAAK,SAACC,EAAMC,GAAP,OACZD,EAAKE,KAAKC,cAAcF,EAAKC,SAAQE,MAAM,EAAG,OAIvCC,EAAS,kBACpBZ,IAASE,MAAK,SAAAC,GAAQ,OACpB,YAAIA,GAAUU,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,aCbzBC,G,MAAb,4MACEC,MAAQ,CACNC,KAAM,IAFV,wDAKE,SAAmBC,GACbA,EAAUC,OAASC,KAAKC,MAAMF,MAChCC,KAAKE,SAAS,CACZL,KAAMG,KAAKC,MAAME,UARzB,oBAaE,WACE,IAAQN,EAASG,KAAKJ,MAAdC,KAER,OACE,oCACGA,GACC,oCACE,wBAAIO,UAAU,QACXP,EAAKQ,KAAI,SAAAC,GAAI,OACZ,wBAAIC,IAAKD,EAAKE,GAAIJ,UAAWE,EAAKZ,OAC/BY,EAAKlB,gBAvBxB,GAA8BqB,IAAMC,YCuErBC,E,4MArEbf,MAAQ,CACNG,KAAM,GACNa,iBAAkB,I,EAOpBC,qBAAuB,SAACC,GAA+B,IAAlBf,EAAiB,uDAAV,MAC1Ce,IACGjC,MAAK,SAACkC,GACL,EAAKb,UAAS,SAACN,GACb,OAAIA,EAAMG,OAASA,GACV,CACLa,iBAAiB,YAAKG,GACtBhB,e,EASZiB,kBAAoB,WAClB,EAAKH,qBAAqB7B,EAAW,c,EAGvCiC,YAAc,WACZ,EAAKJ,qBAAqBtB,EAAQ,Y,EAGpC2B,YAAc,WACZ,EAAKL,qBAAqBlC,I,uDA7B5B,WACEqB,KAAKa,qBAAqBlC,K,oBA+B5B,WACE,MAAmCqB,KAAKJ,MAAhCgB,EAAR,EAAQA,iBAAkBb,EAA1B,EAA0BA,KAE1B,OACE,oCACE,qDACA,6BACE,4BACEoB,KAAK,SACLC,QAASpB,KAAKkB,aAFhB,aAMA,4BACEC,KAAK,SACLC,QAASpB,KAAKiB,aAFhB,kBAMA,4BACEE,KAAK,SACLC,QAASpB,KAAKgB,mBAFhB,kBAOF,kBAAC,EAAD,CAAUb,MAAOS,EAAkBb,KAAMA,S,GAhE/BU,IAAMC,WCDxBW,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e9c2d4b7.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => (\n  getAll().then(response => (\n    response.sort((prev, next) => (\n      prev.name.localeCompare(next.name))).slice(0, 5)\n  ))\n);\n\nexport const getRed = () => (\n  getAll().then(response => (\n    [...response].filter(food => food.color === 'red')\n  ))\n);\n","import React from 'react';\nimport PropTypes from 'prop-types'; \nimport './GoodList.scss';\n\nexport class GoodList extends React.Component {\n  state = {\n    list: [],\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.show !== this.props.show) {\n      this.setState({\n        list: this.props.goods,\n      });\n    }\n  }\n\n  render() {\n    const { list } = this.state;\n\n    return (\n      <>\n        {list && (\n          <>\n            <ul className=\"list\">\n              {list.map(elem => (\n                <li key={elem.id} className={elem.color}>\n                  {elem.name}\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nGoodList.propTypes = {\n  show: PropTypes.string.isRequired,\n  goods: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { getAll, get5First, getRed } from './api/goods';\nimport { GoodList } from './Components/GoodList';\n\nclass App extends React.Component {\n  state = {\n    show: '',\n    currentListGoods: [],\n  }\n\n  componentDidMount() {\n    this.recordListFromServer(getAll);\n  }\n\n  recordListFromServer = (promiseList, show = 'all') => {\n    promiseList()\n      .then((res) => {\n        this.setState((state) => {\n          if (state.show !== show) {\n            return {\n              currentListGoods: [...res],\n              show,\n            };\n          }\n\n          return true;\n        });\n      });\n  };\n\n  getFirstFiveGoods = () => {\n    this.recordListFromServer(get5First, 'firstFive');\n  };\n\n  getRedGoods = () => {\n    this.recordListFromServer(getRed, 'onlyRed');\n  };\n\n  getAllGoods = () => {\n    this.recordListFromServer(getAll);\n  };\n\n  render() {\n    const { currentListGoods, show } = this.state;\n\n    return (\n      <>\n        <h1>Dynamic list of Goods</h1>\n        <div>\n          <button\n            type=\"button\"\n            onClick={this.getAllGoods}\n          >\n            All goods\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.getRedGoods}\n          >\n            Only red goods\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.getFirstFiveGoods}\n          >\n            First 5 goods\n          </button>\n        </div>\n        <GoodList goods={currentListGoods} show={show} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}